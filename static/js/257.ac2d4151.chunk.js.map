{"version":3,"file":"static/js/257.ac2d4151.chunk.js","mappings":"qQAEe,SAASA,IAEpB,OACI,yDAC+B,SAAC,KAAD,CAAMC,GAAG,IAAT,uBAA8B,OCCtD,SAASC,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAEFD,GAAW,IACXE,EAAAA,EAAAA,MACKC,MAAK,SAAAC,GACFR,EAAUQ,MAEbC,OAAM,SAAAR,GACHC,EAAS,gCACTQ,QAAQC,IAAIV,MAEfW,SAAQ,kBAAMR,GAAW,QAGnC,IAEH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACI,0BACI,UAACC,EAAA,EAAD,YACI,SAAC,IAAD,CAAaC,KAAM,oBAClBb,GAAW,cACXU,IAAc,SAAClB,EAAD,IACdM,IAAS,yBAAMA,IACfF,IAAU,SAACkB,EAAA,EAAD,CAAWlB,OAAQA,W,qDCnC9C,MAAwB,2B,SCCT,SAASmB,EAAT,GACd,IADqCF,EACtC,EADsCA,KAElC,OACI,eAAIG,UAAWC,EAAf,SAA2BJ,M,2CCsBnC,IAxBkB,SAAC,GAA8B,IAA5BjB,EAA2B,EAA3BA,OAAQsB,EAAmB,EAAnBA,aACzB,OACI,0BACI,wBACKtB,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACR,yBACI,SAAC,KAAD,CAAM5B,GAAE,kBAAa2B,GAAME,MAAO,CAAEC,KAAML,GAA1C,UACI,wBAAKG,OAFJD,Y,0MCNvBI,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACQ,uBADRA,EAEW,gBAFXA,EAGY,SAHZA,EAIY,WAJZA,EAKY,WAGLvB,EAAS,mCAAG,yGAAOwB,EAAP,+BAAc,EAAd,SACHF,IAAAA,IAAA,UAAaC,EAAb,oBAA4CF,EAA5C,iBAA4DG,EAA5D,wCADG,cACfC,EADe,yBAEdA,EAAIC,KAAKxB,SAFK,2CAAH,qDAKTyB,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACNF,IAAAA,IAAA,UAAaC,EAAb,oBAA+CF,EAA/C,iBAA+DG,EAA/D,kBAA6EI,EAA7E,wCADM,cAClBH,EADkB,yBAEjBA,EAAIC,KAAKxB,SAFQ,2CAAH,sDAKZ2B,EAAkB,mCAAG,WAAOZ,GAAP,uFACZK,IAAAA,IAAA,UAAaC,EAAb,YAAwCN,EAAxC,oBAAsDI,EAAtD,oBADY,cACxBI,EADwB,yBAEvBA,EAAIC,MAFmB,2CAAH,sDAKlBI,EAAkB,mCAAG,WAAOb,GAAP,uFACZK,IAAAA,IAAA,iBAAoBL,GAApB,OAAyBM,EAAzB,oBAA4DF,EAA5D,oBADY,cACxBI,EADwB,yBAEvBA,EAAIC,KAAKK,MAFc,2CAAH,sDAKlBC,EAAkB,mCAAG,WAAOf,GAAP,4FAAWO,EAAX,+BAAkB,EAAlB,SACZF,IAAAA,IAAA,iBAAoBL,GAApB,OAAyBM,EAAzB,oBAA4DF,EAA5D,gCAA2FG,IAD/E,cACxBC,EADwB,yBAEvBA,EAAIC,KAAKxB,SAFc,2CAAH","sources":["ui/NotFoundView.jsx","components/HomePage/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.jsx","components/TrendingMovies/MovieList.jsx","services/movies-api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() \n{\n    return (\n        <h1>\n            Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n        </h1>\n    );\n}\n","import Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport NotFoundView from 'ui/NotFoundView';\n\nexport default function GetTrendingMovies() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n   \n    useEffect(() => {\n        const fetchTrendingMovies = () => {\n            setLoading(true);\n            getMovies()\n                .then(results => {\n                    setMovies(results);\n                })\n                .catch(error => {\n                    setError('Ops. Something went wrong...');\n                    console.log(error);\n                })\n                .finally(() => setLoading(false));\n        };\n        fetchTrendingMovies();\n    }, []);\n\n    const isNotFound = !loading && !movies.length;\n    return (\n        <div>\n            <Container>\n                <PageHeading text={'Trending Movies'}></PageHeading>\n                {loading && 'Loading ...'}\n                {isNotFound && <NotFoundView />}\n                {error && <div>{error}</div>}\n                {movies && <MovieList movies={movies} />}\n            </Container>\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import css from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) \n{\n    return (\n        <h1 className={css.title}>{text}</h1>\n    );\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n    return (\n        <div>\n            <ul>\n                {movies.map(({ id, original_title }) => (\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                            <h3>{original_title}</h3>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n}\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    querySearch: '/search/movie',\n    movieDetails: '/movie',\n    movieCredits: '/credits',\n    movieReviews: '/reviews',\n}\n\nexport const getMovies = async (page = 1) => {\n    const res = await axios.get(`${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`);\n    return res.data.results;\n}\n\nexport const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(`${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`);\n    return res.data.results;\n}\n\nexport const fetchMoviesDetails = async (id) => {\n    const res = await axios.get(`${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    const res = await axios.get(`/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`);\n    return res.data.cast;\n}\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n    const res = await axios.get(`/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`);\n    return res.data.results;\n}"],"names":["NotFoundView","to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","text","MovieList","PageHeading","className","css","prevLocation","map","id","original_title","state","from","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}