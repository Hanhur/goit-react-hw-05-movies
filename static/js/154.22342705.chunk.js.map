{"version":3,"file":"static/js/154.22342705.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.jsx","components/TrendingMovies/MovieList.jsx","services/movies-api.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/SearchBar.jsx","views/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import css from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) \n{\n    return (\n        <h1 className={css.title}>{text}</h1>\n    );\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, prevLocation }) => {\n    return (\n        <div>\n            <ul>\n                {movies.map(({ id, original_title }) => (\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: prevLocation }}>\n                            <h3>{original_title}</h3>\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n}\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    querySearch: '/search/movie',\n    movieDetails: '/movie',\n    movieCredits: '/credits',\n    movieReviews: '/reviews',\n}\n\nexport const getMovies = async (page = 1) => {\n    const res = await axios.get(`${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`);\n    return res.data.results;\n}\n\nexport const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(`${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`);\n    return res.data.results;\n}\n\nexport const fetchMoviesDetails = async (id) => {\n    const res = await axios.get(`${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    const res = await axios.get(`/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`);\n    return res.data.cast;\n}\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n    const res = await axios.get(`/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`);\n    return res.data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MoviesPage_searchForm__bufBH\",\"searchInput\":\"MoviesPage_searchInput__ejfTW\",\"searchButton\":\"MoviesPage_searchButton__jm-oy\"};","import css from './MoviesPage.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSearch }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleQuerySearch = (event) => {\n        setSearchQuery(event.target.value.toLowerCase());\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (searchQuery.trim() === '') \n        {\n            alert('Enter the film title');\n        }\n\n        onSearch(searchQuery);\n        setSearchQuery('');\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className={css.searchForm}>\n                <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    value={searchQuery}\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search ...\"\n                    onChange={handleQuerySearch}\n                    className={css.searchInput}\n                />\n                <button type=\"submit\" className={css.searchButton}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nSearchBar.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/MoviesPage/SearchBar';\nimport { fetchByQuery } from 'services/movies-api';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const location = useLocation();\n    const searchRequest = searchParams.get('query');\n\n    useEffect(() => {\n        if (!searchRequest) \n        {\n            return;\n        }\n\n        const fetchMovie = () => {\n            setLoading(true);\n            fetchByQuery(searchRequest)\n                .then(results => {\n                    if (!results.length) \n                    {\n                        alert('No movies found!');\n                    }\n\n                    setMovies(results);\n                })\n                .catch(error => {\n                    setError('Ops. Something went wrong...');\n                    console.log(error);\n                })\n                .finally(setLoading(false));\n        }\n        fetchMovie();\n    }, [searchRequest]);\n\n    function onSubmit(value) \n    {\n        setSearchParams({ query: `${value}` });\n    }\n\n    return (\n        <div>\n            <Container>\n                <PageHeading text={'Movie Search'} />\n                {loading && 'Loading ...'}\n                {error && <div>{error}</div>}\n                <SearchBar onSearch={onSubmit} />\n                {movies && <MovieList movies={movies} prevLocation={location} />}\n            </Container>\n        </div>\n    );\n}\n\nexport default MoviesPage;\n"],"names":["PageHeading","text","className","css","movies","prevLocation","map","id","original_title","to","state","from","API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews","onSearch","useState","searchQuery","setSearchQuery","onSubmit","event","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","console","log","finally","Container","MovieList"],"sourceRoot":""}