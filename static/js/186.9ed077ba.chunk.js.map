{"version":3,"file":"static/js/186.9ed077ba.chunk.js","mappings":"8NAwCA,UApCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,IAAmBT,GAFxB,OAEPU,EAFO,OAGbC,QAAQC,IAAIF,GACZN,EAAWM,GAJE,gDAMbJ,EAAS,EAAD,IANK,yDAAH,qDASlBE,MACD,CAACR,KAGA,2BACKK,IAAS,yBAAMA,KAChB,wBACKF,EAAQU,KAAI,SAAAC,GACT,OACI,2BACI,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOG,c,0MC3BlCC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACQ,uBADRA,EAEW,gBAFXA,EAGY,SAHZA,EAIY,WAJZA,EAKY,WAGLC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACHH,IAAAA,IAAA,UAAaC,EAAb,oBAA4CF,EAA5C,iBAA4DI,EAA5D,wCADG,cACfZ,EADe,yBAEdA,EAAIa,KAAKC,SAFK,2CAAH,qDAKTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACNH,IAAAA,IAAA,UAAaC,EAAb,oBAA+CF,EAA/C,iBAA+DI,EAA/D,kBAA6EI,EAA7E,wCADM,cAClBhB,EADkB,yBAEjBA,EAAIa,KAAKC,SAFQ,2CAAH,sDAKZG,EAAkB,mCAAG,WAAOV,GAAP,uFACZE,IAAAA,IAAA,UAAaC,EAAb,YAAwCH,EAAxC,oBAAsDC,EAAtD,oBADY,cACxBR,EADwB,yBAEvBA,EAAIa,MAFmB,2CAAH,sDAKlBK,EAAkB,mCAAG,WAAOX,GAAP,uFACZE,IAAAA,IAAA,iBAAoBF,GAApB,OAAyBG,EAAzB,oBAA4DF,EAA5D,oBADY,cACxBR,EADwB,yBAEvBA,EAAIa,KAAKM,MAFc,2CAAH,sDAKlBpB,EAAkB,mCAAG,WAAOQ,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACZH,IAAAA,IAAA,iBAAoBF,GAApB,OAAyBG,EAAzB,oBAA4DF,EAA5D,gCAA2FI,IAD/E,cACxBZ,EADwB,yBAEvBA,EAAIa,KAAKC,SAFc,2CAAH","sources":["components/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/movies-api';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const res = await fetchMoviesReviews(movieId);\n                console.log(res);\n                setReviews(res);\n            } catch (error) {\n                setError(error);\n            }\n        };\n        fetchReviews();\n    }, [movieId]);\n\n    return (\n        <div>\n            {error && <div>{error}</div>}\n            <ul>\n                {reviews.map(review => {\n                    return (\n                        <li key={review.id}>\n                            <p>Author: {review.author}</p>\n                            <p>{review.content}</p>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    querySearch: '/search/movie',\n    movieDetails: '/movie',\n    movieCredits: '/credits',\n    movieReviews: '/reviews',\n}\n\nexport const getMovies = async (page = 1) => {\n    const res = await axios.get(`${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`);\n    return res.data.results;\n}\n\nexport const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(`${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`);\n    return res.data.results;\n}\n\nexport const fetchMoviesDetails = async (id) => {\n    const res = await axios.get(`${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`);\n    return res.data;\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    const res = await axios.get(`/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`);\n    return res.data.cast;\n}\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n    const res = await axios.get(`/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`);\n    return res.data.results;\n}"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","console","log","map","review","author","content","id","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}